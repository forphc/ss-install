#!/bin/bash

OPTIMIZE_FILE="/etc/sysctl.d/ss-optimize.conf"

_done() {
	echo " Done. A system reboot is needed to apply changes"
	read -n 1 -s -r -p " Press enter to proceed"
	reboot
}

check_now_congest_ctrl() {
	NOW_CONGEST_CTRL=$(cat /proc/sys/net/ipv4/tcp_congestion_control)
}

check_if_BBR_is_avail() {
	if [[ $(find /lib/modules/$(uname -r)/kernel/net/ipv4 -name tcp_bbr* | grep -o bbr) = bbr ]]; then
		availBBR="YES"
	else
		availBBR="NO"
	fi
}

do_sysctl() {
	cat >> "$OPTIMIZE_FILE" << END
fs.file-max = 51200
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.rmem_default = 65536
net.core.wmem_default = 65536
net.core.netdev_max_backlog = 4096
net.core.somaxconn = 4096
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.ip_local_port_range = 10000 65000
net.ipv4.tcp_max_syn_backlog = 4096
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_window_scaling = 1
END
	[[ ${1} = addBBR ]] && echo -e "\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr" >> "$OPTIMIZE_FILE"
	sysctl -p "$OPTIMIZE_FILE" > /dev/null
}

if [[ -e "$OPTIMIZE_FILE" ]]; then
	clear
	echo -e "\n Shadowsocks already optimized, exiting..."
	sleep 2
	main-ss
else
	clear
	echo -e "\n Optimizing shadowsocks, please wait..."
	check_now_congest_ctrl
	if [[ ${NOW_CONGEST_CTRL} = bbr ]]; then
		do_sysctl
		_done
	else
		check_if_BBR_is_avail
		if [[ ${availBBR} = YES ]]; then
			do_sysctl "addBBR"
			_done
		else
			do_sysctl
			_done
		fi
	fi
fi
